{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"boilerplate code ": {
		"prefix": "include",
		"body": [
			"#include<iostream>\n",
			"using  namespace std;\n",
			"int main()",
			"{",
			"\t$1",
			"\treturn 0;",
			"}",
			
		],
		"description": "boilerplate code "
	},
	"testCases code ":{
		"prefix": "codechef",
		"body": [
			"#include <bits/stdc++.h>",
			"#include<iostream>",
			"#include<vector>",
			"#include<string>",
			"#include<bitset>",
			"#include<cmath>",
			"#include<numeric>",
			"#include<algorithm>\n",
			"#define lli long long int",
			"#define ll long long",
			"#define loop(i,start,end) for (lli i = start; i < end; i++)",
			"#define rloop(i, n) for (lli i = n-1; i >= 0; i--)",
			"#define arrIn(arr,n) loop(i,0,n){cin>>arr[i];}",
			"#define cts(k) cout<<k<<\" \";",
			"#define ctl(k) cout<<k<<endl;",
			"#define all(vec) vec.begin(),vec.end();",
			"#define printArr(arr,n) loop(i,0,n){cts(arr[i]);}",
			"#define printPair(vec) loop(i,0,vec.size()){cts(vec[i].first);ctl(vec[i].second);}\n",
			"using  namespace std;\n",
			"int main()",
			"{",
			"\tios_base::sync_with_stdio(false);",
			"\tcin.tie(NULL);",
			"\tlli t;",
			"\tcin>>t;",
			"\twhile(t--){",
			"\t\tlli n;",
			"\t\tcin>>n;",
			"\t\tlli arr[n];",
			"\t\tarrIn(arr,n);",
			"\t\t$1",
			"\t}",
			"\treturn 0;",
			"}",
			
		],
		"description": "boilerplate code for testcases"

	},
	"array code ":{
		"prefix": "arraycode",
		"body": [
			"#include<iostream>\n",
			"using  namespace std;\n",
			"struct array{",
			"\tint length;",
			"\tint size;",
			"\tint arr[10];",
			"};\n",
			"void display(struct array *p){",
			"\tfor (int i = 0; i < p->length; i++){",
			"\t\tcout<<(p->arr[i])<<\" \";",
			"\t}",
			"\tcout<<endl;",
			"}\n",
			"int $1($2){",
			"\t$0\n}\n",
			"int main()",
			"{",
			"\tstruct array a={ 4, 8, {1,2,3,4} };",
			"\tdisplay(&a);",
			"\t$1(&a);",
			"\tdisplay(&a);\n",
			"\treturn 0;",
			"}",
			
		],
		"description": "boilerplate code for array(ADT) "

	}
}

